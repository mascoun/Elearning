<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- MySQL data source -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">

		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/elearning" />
		<property name="username" value="root" />
		<property name="password" value="" />
	</bean>

	<!-- Hibernate session factory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>com.ensi.project.model.User</value>
				<value>com.ensi.project.model.UserRole</value>
				<value>com.ensi.project.model.Course</value>
				<value>com.ensi.project.model.Student</value>
				<value>com.ensi.project.model.Teacher</value>
				<value>com.ensi.project.model.Classe</value>
				<value>com.ensi.project.model.Exercice</value>
				<value>com.ensi.project.model.Document</value>
				<value>com.ensi.project.model.SeenCourse</value>
				<value>com.ensi.project.model.SeenExercice</value>
				<value>com.ensi.project.model.Message</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQL5Dialect
				</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>

	<bean id="userDao" class="com.ensi.project.dao.impl.UserDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="courseDao" class="com.ensi.project.dao.impl.CourseDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="exerciceDao" class="com.ensi.project.dao.impl.ExerciceDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="classeDao" class="com.ensi.project.dao.impl.ClasseDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="messageDao" class="com.ensi.project.dao.impl.MessageDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="messageService" class="com.ensi.project.service.impl.MessageServiceImpl">
		<property name="messageDao" ref="messageDao" />
	</bean>

	<bean id="classeService" class="com.ensi.project.service.impl.ClasseServiceImpl">
		<property name="classeDao" ref="classeDao" />
	</bean>

	<bean id="bCryptPasswordEncoder"
		class=" org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

	<bean id="userService" class="com.ensi.project.service.impl.UserServiceImpl">
		<property name="userDao" ref="userDao" />
		<property name="bCryptPasswordEncoder" ref="bCryptPasswordEncoder" />
	</bean>
	<bean id="courseService" class="com.ensi.project.service.impl.CourseServiceImpl">
		<property name="courseDao" ref="courseDao" />
	</bean>
	<bean id="exerciceService" class="com.ensi.project.service.impl.ExerciceServiceImpl">
		<property name="exerciceDao" ref="exerciceDao" />
	</bean>
	<!-- MUST have transaction manager, using aop and aspects -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="userServicePointCut"
			expression="execution(* com.ensi.project.service.*Service.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="userServicePointCut" />
	</aop:config>

</beans>